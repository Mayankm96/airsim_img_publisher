<!--
  Example launch file for octomap_server mapping:
  Listens to incoming PointCloud2 data and incrementally builds an octomap.
  The data is sent out in different representations.

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details
-->
<launch>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.075" />

		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="world" />
		<param name="base_frame_id" value="base_link" />

		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="100" />

		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/airsim/points" />

		<!-- maximum range to integrate (speedup!) -->
		<!--<param name="pointcloud_min_z" value="-5.0" />
		<param name="pointcloud_max_z" value="50.0" />-->
                <param name="pointcloud_max_x" value="200.0" />
                <param name="pointcloud_min_x" value="-200.0" />
		<param name="filter_ground" value="false" />
		<param name="sensor_model/min" value="0.05" />
		<param name="sensor_model/max" value="100" />
		<param name="latch" value="false" />

	</node>
</launch>
